{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEOY\\\\Desktop\\\\numer\\\\project_numer\\\\src\\\\components\\\\Interpolation\\\\NewtonDivided.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport Topbar from \"../Topbar\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewtonDivided() {\n  _s();\n\n  const topic = \"Newton Divided Difference\";\n  const [num, setNum] = useState(0);\n  const [xValue, setX] = useState([]);\n  const [yValue, setY] = useState([]);\n  const [pointCount, setpointCount] = useState(0);\n  const [interpolatePoint, setinterpolatePoint] = useState([]);\n  const [FindX, setFindX] = useState(0);\n  const [output, setOutput] = useState([]);\n  useEffect(() => {\n    document.title = topic;\n  }, []);\n\n  const generate_table = () => {\n    return [...Array(parseInt(num || 0)).keys()];\n  };\n\n  const generate_interpoint = () => {\n    return [...Array(parseInt(pointCount || 0)).keys()];\n  };\n\n  const initialX = (i, event) => {\n    let copy = [...xValue];\n    copy[i] = +event.target.value;\n    setX(copy);\n  };\n\n  const initialY = (i, event) => {\n    let copy = [...yValue];\n    copy[i] = +event.target.value;\n    setY(copy);\n  };\n\n  const initialPoint = (i, event) => {\n    let copy = [...interpolatePoint];\n    copy[i] = +event.target.value - 1;\n    setinterpolatePoint(copy);\n  };\n\n  const sendToAPI = e => {\n    e.preventDefault();\n    NewtonDivided();\n  };\n\n  const NewtonDivided = () => {\n    Axios.post(\"http://localhost:5000/api/NewtonInterpolation\", {\n      xValue: xValue,\n      yValue: yValue,\n      interpolatePoint: interpolatePoint,\n      FindX: FindX,\n      pointCount: pointCount\n    }).then(res => {\n      setOutput(res.data.out);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"Enter number of Variable :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\xA0\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: num,\n              onChange: e => setNum(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), num > 0 ? /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: sendToAPI,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), generate_table().map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-group list-group-flush\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                        children: i + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 99,\n                        columnNumber: 30\n                      }, this), \" =\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 98,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      step: \"any\",\n                      onChange: e => initialX(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"F(x\", /*#__PURE__*/_jsxDEV(\"sub\", {\n                        children: i + 1\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 108,\n                        columnNumber: 32\n                      }, this), \") =\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      step: \"any\",\n                      onChange: e => initialY(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Find value at X :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 36\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: FindX,\n                onChange: e => setFindX(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Enter Interpolate Points :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\xA0\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: pointCount,\n                onChange: e => setpointCount(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), generate_interpoint().map(i => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"list-group list-group-flush\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"list-group-item\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-row\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-4\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      children: [\"Interpolate Point \", i + 1, \" =\"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 27\n                    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                      type: \"number\",\n                      onChange: e => initialPoint(i, e)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 27\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 21\n              }, this)\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 19\n            }, this)), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              value: \"Submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), \"F(x) = \", output]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewtonDivided, \"mM9QGjdiHzJ16TgmIH4a1opPtyA=\");\n\n_c = NewtonDivided;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewtonDivided\");","map":{"version":3,"sources":["C:/Users/TEOY/Desktop/numer/project_numer/src/components/Interpolation/NewtonDivided.js"],"names":["React","useState","useEffect","Container","Axios","Topbar","Footer","NewtonDivided","topic","num","setNum","xValue","setX","yValue","setY","pointCount","setpointCount","interpolatePoint","setinterpolatePoint","FindX","setFindX","output","setOutput","document","title","generate_table","Array","parseInt","keys","generate_interpoint","initialX","i","event","copy","target","value","initialY","initialPoint","sendToAPI","e","preventDefault","post","then","res","data","out","catch","err","console","log","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container } from \"react-bootstrap\";\nimport Axios from \"axios\";\n\nimport \"../../App.css\";\nimport Topbar from \"../Topbar\";\nimport Footer from \"../Footer\";\n\nexport default function NewtonDivided() {\n  const topic = \"Newton Divided Difference\";\n  const [num, setNum] = useState(0);\n  const [xValue, setX] = useState([]);\n  const [yValue, setY] = useState([]);\n  const [pointCount, setpointCount] = useState(0);\n  const [interpolatePoint, setinterpolatePoint] = useState([]);\n  const [FindX, setFindX] = useState(0);\n  const [output, setOutput] = useState([]);\n\n  useEffect(() => {\n    document.title = topic;\n  }, []);\n\n  const generate_table = () => {\n    return [...Array(parseInt(num || 0)).keys()];\n  };\n\n  const generate_interpoint = () => {\n    return [...Array(parseInt(pointCount || 0)).keys()];\n  };\n\n  const initialX = (i, event) => {\n    let copy = [...xValue];\n    copy[i] = +event.target.value;\n    setX(copy);\n  };\n\n  const initialY = (i, event) => {\n    let copy = [...yValue];\n    copy[i] = +event.target.value;\n    setY(copy);\n  };\n\n  const initialPoint = (i, event) => {\n    let copy = [...interpolatePoint];\n    copy[i] = +event.target.value - 1;\n    setinterpolatePoint(copy);\n  };\n\n  const sendToAPI = (e) => {\n    e.preventDefault();\n    NewtonDivided();\n  };\n  const NewtonDivided = () => {\n    Axios.post(\"http://localhost:5000/api/NewtonInterpolation\", {\n      xValue: xValue,\n      yValue: yValue,\n      interpolatePoint: interpolatePoint,\n      FindX: FindX,\n      pointCount: pointCount,\n    })\n      .then((res) => {\n        setOutput(res.data.out);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Topbar />\n      <p></p>\n      <div>\n        <Container>\n          <h1>\n            <code>{topic}</code>\n          </h1>\n          <p></p>\n          <p></p>\n          <div>\n            <label>\n              Enter number of Variable :<span>&nbsp;&nbsp;</span>\n              <input\n                type=\"text\"\n                value={num}\n                onChange={(e) => setNum(e.target.value)}\n              />\n            </label>\n            <p></p>\n            {num > 0 ? (\n              <form onSubmit={sendToAPI}>\n                <p></p>\n                {generate_table().map((i) => (\n                  <div key={i} className=\"list-group list-group-flush\">\n                    <div className=\"list-group-item\">\n                      <div className=\"form-row\">\n                        <div className=\"form-group col-4\">\n                          <label>\n                            X<sub>{i + 1}</sub> =\n                          </label>\n                          <input\n                            type=\"number\" step=\"any\"\n                            onChange={(e) => initialX(i, e)}\n                          />\n                        </div>\n                        <div className=\"form-group col-4\">\n                          <label>\n                            F(x<sub>{i + 1}</sub>) =\n                          </label>\n                          <input\n                            type=\"number\" step=\"any\"\n                            onChange={(e) => initialY(i, e)}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n                <p></p>\n                <label>\n                  Find value at X :<span>&nbsp;&nbsp;</span>\n                  <input\n                    type=\"text\"\n                    value={FindX}\n                    onChange={(e) => setFindX(e.target.value)}\n                  />\n                </label>\n                <p></p>\n                <label>\n                  Enter Interpolate Points :<span>&nbsp;&nbsp;</span>\n                  <input\n                    type=\"text\"\n                    value={pointCount}\n                    onChange={(e) => setpointCount(e.target.value)}\n                  />\n                </label>\n\n                {generate_interpoint().map((i) => (\n                  <div key={i} className=\"list-group list-group-flush\">\n                    <div className=\"list-group-item\">\n                      <div className=\"form-row\">\n                        <div className=\"form-group col-4\">\n                          <label>Interpolate Point {i + 1} =</label>\n                          <input\n                            type=\"number\"\n                            onChange={(e) => initialPoint(i, e)}\n                          />\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n\n                <p></p>\n                <button type=\"submit\" value=\"Submit\">\n                  Submit\n                </button>\n              </form>\n            ) : null}\n          </div>\n          <p></p>\n          <h2>Output</h2>\n          F(x) = {output}\n        </Container>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}