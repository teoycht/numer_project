{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\TEOY\\\\Desktop\\\\numer\\\\project_numer\\\\src\\\\components\\\\LinearAlgebra\\\\LUDecompose.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Axios from \"axios\";\nimport \"../../App.css\";\nimport Topbar from \"../Topbar\";\nimport Footer from \"../Footer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LUDecompose() {\n  _s();\n\n  const topic = \"LU Decomposition\";\n  const [btnState, setBtnState] = useState(false);\n  const [output, setOutput] = useState([]);\n  const [matrixA, setMatrixA] = useState(Array.from({\n    length: 3\n  }, () => Array.from({\n    length: 3\n  }, () => null)));\n  const [matrixB, setMatrixB] = useState(Array.from({\n    length: 1\n  }, () => Array.from({\n    length: 3\n  }, () => null)));\n  useEffect(() => {\n    document.title = topic;\n  }, []);\n\n  const initialA = (row, column, event) => {\n    let copy = [...matrixA];\n    copy[row][column] = +event.target.value;\n    setMatrixA(copy);\n  };\n\n  const initialB = (row, column, event) => {\n    let copy = [...matrixB];\n    copy[row][column] = +event.target.value;\n    setMatrixB(copy);\n  };\n\n  const handleSubmit = e => {\n    if (btnState === false) {\n      e.preventDefault();\n      lu_decompose();\n    }\n  };\n\n  const lu_decompose = () => {\n    Axios.post(\"http://localhost:5000/api/LUDecomposeAPI\", {\n      matrixA: matrixA,\n      matrixB: matrixB\n    }).then(res => {\n      setBtnState(true);\n      setOutput(res.data.out);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Topbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: topic\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              xs: \"7\",\n              children: [\"X Matrix\", /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: matrixA.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: row.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        disabled: btnState,\n                        onChange: e => initialA(rowIndex, columnIndex, e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 77,\n                        columnNumber: 29\n                      }, this)\n                    }, columnIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 76,\n                      columnNumber: 27\n                    }, this))\n                  }, rowIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              xs: \"5\",\n              children: [\"Y Matrix\", /*#__PURE__*/_jsxDEV(\"table\", {\n                children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: matrixB.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: row.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                      children: /*#__PURE__*/_jsxDEV(\"input\", {\n                        type: \"number\",\n                        disabled: btnState,\n                        onChange: e => initialB(rowIndex, columnIndex, e)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 29\n                      }, this)\n                    }, columnIndex, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 99,\n                      columnNumber: 27\n                    }, this))\n                  }, rowIndex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          value: \"Submit\",\n          disabled: btnState,\n          onClick: handleSubmit,\n          children: \"Find the Solution\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Output\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), output.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"X\", /*#__PURE__*/_jsxDEV(\"sub\", {\n            children: index + 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 16\n          }, this), \" = \", item]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LUDecompose, \"lZSZqpcfRx8Ffmj0steFYif+cTk=\");\n\n_c = LUDecompose;\n\nvar _c;\n\n$RefreshReg$(_c, \"LUDecompose\");","map":{"version":3,"sources":["C:/Users/TEOY/Desktop/numer/project_numer/src/components/LinearAlgebra/LUDecompose.js"],"names":["React","useState","useEffect","Container","Row","Col","Axios","Topbar","Footer","LUDecompose","topic","btnState","setBtnState","output","setOutput","matrixA","setMatrixA","Array","from","length","matrixB","setMatrixB","document","title","initialA","row","column","event","copy","target","value","initialB","handleSubmit","e","preventDefault","lu_decompose","post","then","res","data","out","catch","err","console","log","map","rowIndex","columnIndex","item","index"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport Axios from \"axios\";\n\nimport \"../../App.css\";\nimport Topbar from \"../Topbar\";\nimport Footer from \"../Footer\";\n\nexport default function LUDecompose() {\n  const topic = \"LU Decomposition\";\n  const [btnState, setBtnState] = useState(false);\n  const [output, setOutput] = useState([]);\n  const [matrixA, setMatrixA] = useState(\n    Array.from({ length: 3 }, () => Array.from({ length: 3 }, () => null))\n  );\n  const [matrixB, setMatrixB] = useState(\n    Array.from({ length: 1 }, () => Array.from({ length: 3 }, () => null))\n  );\n\n  useEffect(() => {\n    document.title = topic;\n  }, []);\n\n  const initialA = (row, column, event) => {\n    let copy = [...matrixA];\n    copy[row][column] = +event.target.value;\n    setMatrixA(copy);\n  };\n\n  const initialB = (row, column, event) => {\n    let copy = [...matrixB];\n    copy[row][column] = +event.target.value;\n    setMatrixB(copy);\n  };\n\n  const handleSubmit = (e) => {\n    if (btnState === false) {\n      e.preventDefault();\n      lu_decompose();\n    }\n  };\n  const lu_decompose = () => {\n    Axios.post(\"http://localhost:5000/api/LUDecomposeAPI\", {\n      matrixA: matrixA,\n      matrixB: matrixB,\n    })\n      .then((res) => {\n        setBtnState(true);\n        setOutput(res.data.out);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  };\n\n  return (\n    <div>\n      <Topbar />\n      <p></p>\n      <div>\n        <Container>\n          <h1>\n            <code>{topic}</code>\n          </h1>\n          <p></p>\n          <p></p>\n          <div>\n            <Row>\n              <Col xs=\"7\">\n                X Matrix\n                <table>\n                  <tbody>\n                    {matrixA.map((row, rowIndex) => (\n                      <tr key={rowIndex}>\n                        {row.map((column, columnIndex) => (\n                          <td key={columnIndex}>\n                            <input\n                              type=\"number\"\n                              disabled={btnState}\n                              onChange={(e) =>\n                                initialA(rowIndex, columnIndex, e)\n                              }\n                            />\n                          </td>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </Col>\n\n              <Col xs=\"5\">\n                Y Matrix\n                <table>\n                  <tbody>\n                    {matrixB.map((row, rowIndex) => (\n                      <tr key={rowIndex}>\n                        {row.map((column, columnIndex) => (\n                          <tr key={columnIndex}>\n                            <input\n                              type=\"number\"\n                              disabled={btnState}\n                              onChange={(e) =>\n                                initialB(rowIndex, columnIndex, e)\n                              }\n                            />\n                          </tr>\n                        ))}\n                      </tr>\n                    ))}\n                  </tbody>\n                </table>\n              </Col>\n            </Row>\n          </div>\n          <p></p>\n          <button value=\"Submit\" disabled={btnState} onClick={handleSubmit}>\n            Find the Solution\n          </button>\n\n          <h2>Output</h2>\n          {output.map((item, index) => (\n            <li key={index}>\n              X<sub>{index + 1}</sub> = {item}\n            </li>\n          ))}\n        </Container>\n      </div>\n      <Footer />\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}